<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>gov.nsa.datawave.microservice</groupId>
        <artifactId>datawave-microservice-parent</artifactId>
        <version>4.0.2</version>
        <relativePath>../microservice-parent</relativePath>
    </parent>
    <artifactId>datawave-microservice-service-parent</artifactId>
    <version>5.0.3-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>DataWave Microservices Spring Boot Service Parent</name>
    <scm>
        <connection>scm:git:https://github.com/NationalSecurityAgency/datawave.git</connection>
        <developerConnection>scm:git:git@github.com:NationalSecurityAgency/datawave.git</developerConnection>
        <tag>HEAD</tag>
        <url>https://github.com/NationalSecurityAgency/datawave</url>
    </scm>
    <properties>
        <resource.delimiter>@</resource.delimiter>
        <!-- delimiter that doesn't clash with Spring ${} placeholders -->
        <version.spring.boot>2.7.1</version.spring.boot>
        <version.spring.cloud>2021.0.3</version.spring.cloud>
    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${version.spring.boot}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${version.spring.cloud}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter</artifactId>
                <version>${version.spring.boot}</version>
                <exclusions>
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <!-- This annotation processor is used by springdoc to use javadoc to create openapi documentation -->
        <dependency>
            <groupId>com.github.therapi</groupId>
            <artifactId>therapi-runtime-javadoc-scribe</artifactId>
            <version>0.13.0</version>
            <scope>provided</scope>
        </dependency>
        <!-- includes test libraries (forcing the test scope) for all modules -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>jakarta.xml.bind</groupId>
                    <artifactId>jakarta.xml.bind-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>
    <repositories>
        <repository>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>github-datawave</id>
            <url>https://maven.pkg.github.com/NationalSecurityAgency/datawave</url>
        </repository>
    </repositories>
    <build>
        <!-- Turn on filtering by default for application properties -->
        <resources>
            <resource>
                <filtering>true</filtering>
                <directory>${basedir}/src/main/resources</directory>
                <includes>
                    <include>**/application*.yml</include>
                    <include>**/application*.yaml</include>
                    <include>**/application*.properties</include>
                </includes>
            </resource>
            <resource>
                <directory>${basedir}/src/main/resources</directory>
                <excludes>
                    <exclude>**/application*.yml</exclude>
                    <exclude>**/application*.yaml</exclude>
                    <exclude>**/application*.properties</exclude>
                </excludes>
            </resource>
        </resources>
        <pluginManagement>
            <plugins>
                <!-- Apply more sensible defaults for user projects -->
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <configuration>
                        <parameters>true</parameters>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>enforce-maven</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <requireMavenVersion>
                                        <version>3.6.3</version>
                                    </requireMavenVersion>
                                </rules>
                            </configuration>
                        </execution>
                        <execution>
                            <id>enforce-no-snapshots</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <requireReleaseDeps>
                                        <message>Snapshot dependencies are prohibited on a release build.</message>
                                        <onlyWhenRelease>true</onlyWhenRelease>
                                    </requireReleaseDeps>
                                    <requireJavaVersion>
                                        <version>${java.version}</version>
                                    </requireJavaVersion>
                                </rules>
                                <fail>true</fail>
                            </configuration>
                        </execution>
                        <execution>
                            <id>enforce-banned-dependencies</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <bannedDependencies>
                                        <excludes>
                                            <!-- spring boot microservices do not use the following slf4j binders -->
                                            <exclude>ch.qos.reload4j:reload4j</exclude>
                                            <exclude>org.slf4j:slf4j-reload4j</exclude>
                                            <!-- spring boot microservices do not use 1.x versions of log4j -->
                                            <exclude>log4j:log4j</exclude>
                                            <!-- spring boot microservices do not use 1.x versions of junit -->
                                            <exclude>junit:junit</exclude>
                                        </excludes>
                                        <includes>
                                            <!-- some spring boot microservices include test dependencies which use 1.x versions of junit -->
                                            <include>junit:junit:*:*:test</include>
                                        </includes>
                                    </bannedDependencies>
                                </rules>
                                <fail>true</fail>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <configuration>
                        <classesDirectory>${project.build.outputDirectory}</classesDirectory>
                        <skipTests>${skipTests}</skipTests>
                        <skipITs>${skipITs}</skipITs>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>integration-test</goal>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <configuration>
                        <archive>
                            <manifest>
                                <!--suppress UnresolvedMavenProperty, MavenModelInspection -->
                                <mainClass>${start-class}</mainClass>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            </manifest>
                        </archive>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <configuration>
                        <delimiters>
                            <delimiter>${resource.delimiter}</delimiter>
                        </delimiters>
                        <useDefaultDelimiters>false</useDefaultDelimiters>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <configuration>
                        <failOnMissingWebXml>false</failOnMissingWebXml>
                        <archive>
                            <manifest>
                                <!--suppress UnresolvedMavenProperty, MavenModelInspection -->
                                <mainClass>${start-class}</mainClass>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            </manifest>
                        </archive>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${version.spring.boot}</version>
                    <executions>
                        <execution>
                            <id>generate-build-info</id>
                            <goals>
                                <goal>build-info</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
    <profiles>
        <!-- Activate this profile when building the executable jar in order to host the javadoc within the service.  -->
        <profile>
            <id>embed-javadoc</id>
            <activation>
                <property>
                    <name>embed-javadoc</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <dependencies>
                            <dependency>
                                <groupId>ch.qos.reload4j</groupId>
                                <artifactId>reload4j</artifactId>
                                <version>1.2.22</version>
                            </dependency>
                            <dependency>
                                <groupId>org.apache.maven.doxia</groupId>
                                <artifactId>doxia-site-renderer</artifactId>
                                <version>1.7.4</version>
                                <exclusions>
                                    <exclusion>
                                        <groupId>log4j</groupId>
                                        <artifactId>log4j</artifactId>
                                    </exclusion>
                                </exclusions>
                            </dependency>
                        </dependencies>
                        <executions>
                            <!-- build javadoc jars per module for publishing to the repo -->
                            <execution>
                                <id>module-apidocs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                                <phase>prepare-package</phase>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/classes/static/javadoc</outputDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>docker</id>
            <activation>
                <property>
                    <name>microservice-docker</name>
                </property>
            </activation>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.springframework.boot</groupId>
                            <artifactId>spring-boot-maven-plugin</artifactId>
                            <configuration>
                                <!-- Mark the repackaged executable jar with the "exec" classifier -->
                                <classifier>exec</classifier>
                                <!-- Make the jar fully executable so it can be used as an init.d script -->
                                <executable>true</executable>
                                <!--suppress UnresolvedMavenProperty, MavenModelInspection -->
                                <mainClass>${start-class}</mainClass>
                            </configuration>
                            <executions>
                                <execution>
                                    <id>repackage-executable-jar</id>
                                    <goals>
                                        <goal>repackage</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
        <profile>
            <id>exec</id>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.springframework.boot</groupId>
                            <artifactId>spring-boot-maven-plugin</artifactId>
                            <configuration>
                                <!-- Mark the repackaged executable jar with the "exec" classifier -->
                                <classifier>exec</classifier>
                                <!-- Make the jar fully executable so it can be used as an init.d script -->
                                <executable>true</executable>
                                <!--suppress UnresolvedMavenProperty, MavenModelInspection -->
                                <mainClass>${start-class}</mainClass>
                            </configuration>
                            <executions>
                                <execution>
                                    <id>repackage-executable-jar</id>
                                    <goals>
                                        <goal>repackage</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
    </profiles>
</project>
