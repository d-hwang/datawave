name: Release Microservices

on:
  workflow_dispatch:
    inputs:
      projectToRelease:
        required: true
        type: choice
        options:
          - microservices/
          - microservices/starters
          - microservices/starters/audit
          - microservices/starters/cache
          - microservices/starters/cached-results
          - microservices/starters/datawave
          - microservices/starters/metadata
          - microservices/starters/query
          - microservices/starters/query-metric
          - microservices/configcheck
          - microservices/microservice-parent
          - microservices/microservice-service-parent
          - microservices/services/accumulo/api
          - microservices/services/accumulo/service
          - microservices/services/audit/api
          - microservices/services/audit/service
          - microservices/services/authorization/api
          - microservices/services/authorization/service
          - microservices/services/config/
          - microservices/services/dictionary/api
          - microservices/services/dictionary/service
          - microservices/services/file-provider/api
          - microservices/services/file-provider/service
          - microservices/services/hazelcast/client
          - microservices/services/hazelcast/common
          - microservices/services/hazelcast/service
          - microservices/services/mapreduce-query/api
          - microservices/services/mapreduce-query/jobs
          - microservices/services/mapreduce-query/layout-factory
          - microservices/services/mapreduce-query/service
          - microservices/services/modification/api
          - microservices/services/modification/service
          - microservices/services/query/api
          - microservices/services/query/service
          - microservices/services/query-executor/api
          - microservices/services/query-executor/service
          - microservices/services/query-metric/api
          - microservices/services/query-metric/service
          - core/in-memory-accumulo
      finalRelease:
        required: true
        default: false
        type: boolean
        description: "Whether or not this is the final release of this package. True will ignore modifier value and perform final release steps."
      modifier:
        required: true
        default: "RC1"
        description: "Modifier to add to version (e. g. 1.0.0-RC1)."
env:
  JAVA_VERSION: '11'
  JAVA_DISTRIBUTION: 'zulu' #This is the default on v1 of the action for 1.8
  MAVEN_OPTS: "-Djansi.force=true -Dhttps.protocols=TLSv1.2 -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Djava.awt.headless=true -XX:ThreadStackSize=1m -Daether.connector.basic.threads=8 -Daether.metadataResolver.threads=8 -Daether.syncContext.named.time=480"
  GITHUB_REGISTRY: ghcr.io
  GITHUB_USERNAME: ${{ secrets.GHCR_WRITE_USER_NAME }}
  GITHUB_PASSWORD: ${{ secrets.GHCR_WRITE_ACCESS_TOKEN }}

jobs:
  release-microservice:
    runs-on: ubuntu-latest
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: write
      packages: write
    steps:
    - name: Checkout DataWave
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GHCR_WRITE_ACCESS_TOKEN }}
        
    - name: Set up JDK ${{env.ACCUMULO_JAVA_VERSION}}
      uses: actions/setup-java@v4
      with:
        distribution: ${{env.JAVA_DISTRIBUTION}}
        java-version: ${{env.JAVA_VERSION}}
        cache: 'maven'
        server-id: github-datawave
        # username and password are the env variables names that maven will use
        server-username: GITHUB_USERNAME
        server-password: GITHUB_PASSWORD
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: ${{ env.GITHUB_REGISTRY }}
        username: ${{ secrets.GHCR_WRITE_USER_NAME }}
        password: ${{ secrets.GHCR_WRITE_ACCESS_TOKEN }}
    - name: Determine release version
      id: version
      run: |
        cd "${{ github.event.inputs.projectToRelease }}"
        RAW_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout) || \
                      mvn help:evaluate -Dexpression=project.version -DforceStdout
        BASE_VERSION=${RAW_VERSION%-SNAPSHOT}

        if [ "${{ github.event.inputs.finalRelease }}" = "true" ]; then
          FINAL_VERSION="$BASE_VERSION"
          # Bump patch for new dev version
          IFS='.' read -r MAJOR MINOR PATCH <<< "$BASE_VERSION"
          NEXT_DEV_VERSION="$MAJOR.$MINOR.$((PATCH+1))-SNAPSHOT"
        else
          FINAL_VERSION="${BASE_VERSION}-${{ github.event.inputs.modifier }}"
          # Leave dev version as-is
          NEXT_DEV_VERSION="$RAW_VERSION"
        fi

        echo "FINAL_VERSION=$FINAL_VERSION" >> $GITHUB_OUTPUT
        echo "NEXT_DEV_VERSION=$NEXT_DEV_VERSION" >> $GITHUB_OUTPUT
        echo "VERSION_TAG=${{ github.event.inputs.projectToRelease }}-$FINAL_VERSION" >> $GITHUB_OUTPUT
    - name: Release with Maven
      run: |
        cd "${{ github.event.inputs.projectToRelease }}"
        #Github actions bot user id + user.login. See https://api.github.com/users/github-actions%5Bbot%5D
        git config user.email "datawave@github.com"
        git config user.name "${{ secrets.GHCR_WRITE_USER_NAME }}"
        mvn \
        --batch-mode release:prepare release:perform \
        -Dmaven.release.arguments="-DpushChanges=true \
        -DskipTests -DskipFormat -DskipSpotbugs \
        -Denforcer.skip=true -Dcheckstyle.skip=true \
        -Ddocker-release -Dmicroservice-docker" \
        -DconnectionUrl="scm:git:${{github.server_url}}/${{github.repository}}" \
        -DdeveloperConnectionUrl="scm:git:${{github.server_url}}/${{github.repository}}" \
        -DreleaseVersion="${{ steps.version.outputs.FINAL_VERSION }}" \
        -DdevelopmentVersion="${{ steps.version.outputs.NEXT_DEV_VERSION }}" \
        -Dtag="${{ steps.version.outputs.VERSION_TAG }}"
          
    
          


