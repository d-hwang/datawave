name: Deploy

on:
  push:
    paths-ignore: ['*.md', 'CODEOWNERS', 'LICENSE']
    tags:
      - "**"
    branches:
      - 'integration'
      - 'release/version*'
      - 'docker-images'
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

# Defines two custom environment variables for the workflow. These are used for the Container registry domain, and a name for the Docker image that this workflow builds.
env:
  IMAGE_NAME: ${{ github.repository.lowercase }}
  JAVA_VERSION: '11'
  JAVA_DISTRIBUTION: 'zulu' #This is the default on v1 of the action for 1.8
  MAVEN_OPTS: "-Djansi.force=true -Dhttps.protocols=TLSv1.2 -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Djava.awt.headless=true -XX:ThreadStackSize=1m -Daether.connector.basic.threads=8 -Daether.metadataResolver.threads=8 -Daether.syncContext.named.time=480"
  GITHUB_REGISTRY: ghcr.io
  GITHUB_USER_NAME: ${{ secrets.GHCR_WRITE_USER_NAME }}
  GITHUB_ACCESS_TOKEN: ${{ secrets.GHCR_WRITE_ACCESS_TOKEN }}

jobs:
  deploy-packages-and-images:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: ${{ env.GITHUB_REGISTRY }}
        username: ${{ env.GITHUB_USER_NAME }}
        password: ${{ env.GITHUB_ACCESS_TOKEN }}
    - name: Checkout Code
      uses: actions/checkout@v4
    # Clean up free space
    - uses: ./.github/actions/free-space
      with:
        tool-cache: false
    - name: Set up JDK ${{env.JAVA_VERSION}}
      uses: actions/setup-java@v4
      with:
        distribution: ${{env.JAVA_DISTRIBUTION}}
        java-version: ${{env.JAVA_VERSION}}
        cache: 'maven'
    - name: Build and Push DataWave web/ingest images and packages
      run: |
        docker info
        mvn --settings $GITHUB_WORKSPACE/.github/workflows/settings.xml --show-version --batch-mode --errors --no-transfer-progress --fail-at-end clean deploy -Pkubernetes -Dmaven.build.cache.enabled=false -Dtar -Ddeploy -Ddist -Ddocker-release -Dutils -Dservices -Dstarters -DskipTests -DskipFormat -DskipSpotbugs -Denforcer.skip=true -Dcheckstyle.skip=true
    - name: Build and Push microservice images
      run: |
        mvn --settings $GITHUB_WORKSPACE/.github/workflows/settings.xml --show-version --batch-mode --errors --no-transfer-progress --fail-at-end clean deploy -Dmaven.build.cache.enabled=false -Ddocker.image.prefix=ghcr.io/nationalsecurityagency/datawave -Dmicroservice-docker -Dservices -Dstarters -DskipTests -DskipFormat -DskipSpotbugs -Denforcer.skip=true -Dcheckstyle.skip=true -Dmaven.deploy.skip=true
